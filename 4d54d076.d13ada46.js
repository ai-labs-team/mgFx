(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{151:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return s}));var n=a(1),r=a(9),i=(a(0),a(172)),l={title:"Contributing"},c={id:"contributing",title:"Contributing",description:"## Developing Locally",source:"@site/docs/contributing.md",permalink:"/mgFx/docs/contributing",editUrl:"https://github.com/ai-labs-team/mgFx/edit/master/website/docs/contributing.md",sidebar:"someSidebar",previous:{title:"Design Principles",permalink:"/mgFx/docs/design-principles"},next:{title:"Getting Started",permalink:"/mgFx/docs/guide/getting-started"}},o=[{value:"Developing Locally",id:"developing-locally",children:[]},{value:"Committing &amp; Pull Requests",id:"committing--pull-requests",children:[]},{value:"Release Process",id:"release-process",children:[]}],b={rightToc:o};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"developing-locally"},"Developing Locally"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Clone the monorepo:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/ai-labs-team/mgFx.git\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Install dependencies for the monorepo (and all packages) via yarn:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd mgFx\nyarn\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Build all packages in topographical order:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"yarn clean\nyarn build\n")),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(i.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"TODO")),Object(i.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Ensure you ",Object(i.b)("inlineCode",{parentName:"p"},"yarn clean")," before each ",Object(i.b)("inlineCode",{parentName:"p"},"yarn build")," or you'll get an error."))),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Running tests:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Some of the integration tests depend on a running Redis server. We recommend using Docker for this:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker run --rm -p 6379 redis\n"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Then, test all packages in topographical order:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"yarn test\n")))))),Object(i.b)("h2",{id:"committing--pull-requests"},"Committing & Pull Requests"),Object(i.b)("p",null,"Commit messages are automatically linted using ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/typicode/husky"}),"Husky")," to ensure that they follow the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.conventionalcommits.org/en/v1.0.0/#summary"}),"Conventional Commit")," convention."),Object(i.b)("p",null,"Please ensure that your commit messages are clean and informative as they will be used to construct the CHANGELOG for affected packages."),Object(i.b)("p",null,"Pull Requests are keenly welcomed, on the basis that:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"They are in keeping with the ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/mgFx/docs/design-principles"}),"Design Principles"),"."),Object(i.b)("li",{parentName:"ul"},"New or changed functionality should include adequate test converage."),Object(i.b)("li",{parentName:"ul"},"New or changed functionality should include accurate documentation.")),Object(i.b)("h2",{id:"release-process"},"Release Process"),Object(i.b)("p",null,"Packages are published ",Object(i.b)("strong",{parentName:"p"},"automatically")," to NPM and GitHub Releases via our ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/ai-labs-team/mgfx/actions"}),"CI Workflow"),". The following conventions are used:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"For Pull Requests")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Build & Test all packages against the LTS versions of Node.JS (currently v10.x, v12.x and v14.x) across Ubuntu\n18.04 and MacOS 10.15."),Object(i.b)("li",{parentName:"ul"},"Package the ",Object(i.b)("inlineCode",{parentName:"li"},"analyzer-gui")," Electron app. as a Debian-compatible ",Object(i.b)("inlineCode",{parentName:"li"},".deb")," and a MacOS-compatible ",Object(i.b)("inlineCode",{parentName:"li"},".dmg")," and store\nthem as artifacts on each build."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"No further publishing takes place")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"For commits on the ",Object(i.b)("inlineCode",{parentName:"strong"},"beta")," branch")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Build & Test all packages against the LTS versions of Node.JS (currently v10.x, v12.x and v14.x) across Ubuntu\n18.04 and MacOS 10.15."),Object(i.b)("li",{parentName:"ul"},"Publish packages to NPM and GitHub releases on the ",Object(i.b)("inlineCode",{parentName:"li"},"-beta")," distribution tag."),Object(i.b)("li",{parentName:"ul"},"Upload ",Object(i.b)("inlineCode",{parentName:"li"},"analyzer-gui")," packages to GitHub releases with the ",Object(i.b)("inlineCode",{parentName:"li"},"-beta")," version suffix."))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"For commits on the ",Object(i.b)("inlineCode",{parentName:"strong"},"master")," branch")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Build & Test all packages against the LTS versions of Node.JS (currently v10.x, v12.x and v14.x) across Ubuntu\n18.04 and MacOS 10.15."),Object(i.b)("li",{parentName:"ul"},"Publish packages to NPM and GitHub releases with an automatically computed version number, based on commit\nmessages."),Object(i.b)("li",{parentName:"ul"},"Upload ",Object(i.b)("inlineCode",{parentName:"li"},"analyzer-gui")," packages to GitHub releases with the computed version number from above.")))))}s.isMDXComponent=!0},172:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),p=s(a),m=n,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return a?r.a.createElement(d,c({ref:t},b,{components:a})):r.a.createElement(d,c({ref:t},b))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var b=2;b<i;b++)l[b]=a[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);